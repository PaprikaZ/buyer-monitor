// Generated by CoffeeScript 1.8.0
var cacheDir, pageParser, path, rewire, urlToHtmlTable, util;

util = require('util');

path = require('path');

rewire = require('rewire');

pageParser = rewire('../lib/page_parser.js');

cacheDir = './cache';

urlToHtmlTable = require('./cache/html.json');

describe('page parser', function() {
  var createSiteDescribe;
  describe('site selector', function() {
    it('should select amazon cn parser when given www.amazon.cn');
    it('should select amazon us parser when given www.amazon.com');
    it('should select amazon jp parser when given www.amazon.co.jp');
    it('should select jingdong parser when given www.jd.com');
    it('should throw error when neither above site given');
  });
  describe('parse', function() {
    it('should deliver result with all mandatory fields');
  });
  createSiteDescribe = function(title, siteRegExp) {
    describe(title, function() {
      var behavior, file, table, url;
      table = {};
      for (url in urlToHtmlTable) {
        file = urlToHtmlTable[url];
        if (siteRegExp.test(url)) {
          table[url] = path.join(cacheDir, file);
        }
      }
      if (0 < Object.getOwnPropertyNames(table).length) {
        for (url in table) {
          file = table[url];
          behavior = util.format('should parse %s as expect', url);
          it(behavior);
        }
      } else {
        it('should parse all predefined cached pages as expect');
      }
    });
  };
  createSiteDescribe('amazon cn', /amazon\.cn/);
  createSiteDescribe('amazon us', /amazon\.com/);
  createSiteDescribe('amazon jp', /amazon\.co\.jp/);
  createSiteDescribe('jingdong', /jd\.com/);
});
