// Generated by CoffeeScript 1.8.0
var Messenger, accessTokens, assembleMessengeBody, assembleMessengeTitle, pushServiceUrl, request, util;

util = require("util");

request = require("request");

pushServiceUrl = rootRequire("src/config.js").pushServiceUrl;

accessTokens = rootRequire("src/config.js").accounts.map(function(account) {
  return account.accessToken;
});

assembleMessengeTitle = function(result) {
  var title;
  title = util.format("id %s on site %s is available", result.id, result.site);
  return title;
};

assembleMessengeBody = function(result) {
  var body;
  body = util.format("Title: %s\n", result.title);
  body += util.format("Url: %s\n", result.url);
  body += util.format("Price: %s        full price: %s\n", result.price, result.fullPrice);
  body += util.format("Discount: %s\% OFF\n", Math.round(result.discount));
  body += util.format("Review: %s\n", result.review);
  body += util.format("Instore: %s\n", typeof result.instore === "function" ? result.instore({
    "yes": "no"
  }) : void 0);
  if (0 < result.benefits.length) {
    result.benefits.forEach(function(benefit, idx) {
      body += util.format("Benefit%s: %s\n", idx, benefit);
    });
  } else {
    body += "Benefits: none\n";
  }
  return body;
};

Messenger = (function() {
  function Messenger() {}

  Messenger.prototype.push = function(result) {
    var messenge;
    console.log("product id %s is pushed", result.id);
    messenge = {
      type: 'note',
      title: assembleMessengeTitle(result),
      body: assembleMessengeBody(result)
    };
    accessTokens.map(function(token) {
      var postOptions;
      postOptions = {
        url: pushServiceUrl,
        auth: {
          user: token
        },
        headers: {
          'content-type': 'application/json'
        },
        body: JSON.stringify(messenge)
      };
      return request.post(postOptions, function(err, res, body) {
        var shortToken;
        shortToken = token.slice(0, 7);
        if (!err && res.statusCode === 200) {
          logger.info("push message to user %s ok.", shortToken);
        } else if (res.statusCode !== 200) {
          errorResponseHandler(shortToken, err, res, body);
        } else {
          failedRequestHandler(shortToken, err, res, body);
        }
      });
    });
  };

  Messenger.prototype.errorResponseHandler = function(token, err, res, body) {
    logger.error("messenger response error.");
    logger.error("token %s response status code: %s", token, res.statusCode);
    logger.error("token %s body: %s", token, body);
  };

  Messenger.prototype.failedRequestHandler = function(token, err, res, body) {
    logger.error("messenger request failed.");
    logger.error("token %s, error %s", token, err);
  };

  return Messenger;

})();

module.exports = Messenger;
