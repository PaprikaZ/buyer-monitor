// Generated by CoffeeScript 1.8.0
var AmazonCNParser, AmazonJPParser, AmazonParser, AmazonUSParser, JingdongParser, MANDATORY_OUTPUT_FIELDS, Parser, cheerio, config, invalidSiteHandler, parseErrorHandler, review, _MANDATORY_EXPAND_FIELDS, _MANDATORY_PARSE_FIELDS,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

config = require('./config.js');

cheerio = require('cheerio');

_MANDATORY_PARSE_FIELDS = ['title', 'price', 'fullPrice', 'review', 'instore', 'benefits'];

_MANDATORY_EXPAND_FIELDS = ['discount'];

MANDATORY_OUTPUT_FIELDS = _MANDATORY_PARSE_FIELDS.concat(_MANDATORY_EXPAND_FIELDS);

require('./seed.js').AVAILABLE_VERDICT_FIELDS.map(function(field) {
  if (MANDATORY_OUTPUT_FIELDS.indexOf(field) === -1) {
    console.error('seed verdict field %s is missing in page parser result', field);
    throw new Error('design error, page parser output missing verdict field');
  }
});

review = {
  fiveStar: 10,
  fourHalfStar: 9,
  fourStar: 8,
  threeHalfStar: 7,
  threeStar: 6,
  twoHalfStar: 5,
  twoStar: 4,
  oneHalfStar: 3,
  oneStar: 2,
  halfStar: 1,
  zeroStar: 0,
  unknownStar: -1
};

Parser = (function() {
  function Parser() {}

  Parser.prototype.parse = function(html) {
    var $, result, self;
    self = this;
    $ = cheerio.load(html);
    result = {};
    _MANDATORY_PARSE_FIELDS.map(function(field) {
      result[field] = self[field]($);
    });
    result.discount = this.generateDiscount(result.price, result.fullPrice);
    console.log(result);
    MANDATORY_OUTPUT_FIELDS.some(function(field) {
      return result[field] === '' || result[field] !== result[field] || result[field] === -1 || result[field] < 0;
    }) && parseErrorHandler(this.constructor.name);
    return result;
  };

  Parser.prototype.title = function(selector) {
    return 'unknown';
  };

  Parser.prototype.price = function(selector) {
    return -1;
  };

  Parser.prototype.fullPrice = function(selector) {
    return -1;
  };

  Parser.prototype.review = function(selector) {
    return review.unknownStar;
  };

  Parser.prototype.instore = function(selector) {
    return -1;
  };

  Parser.prototype.benefits = function(selector) {
    return ['foo'];
  };

  Parser.prototype.generateDiscount = function(price, fullPrice) {
    if (fullPrice === 0) {
      return 0;
    } else {
      return Math.round((1 - price / fullPrice) * 100);
    }
  };

  return Parser;

})();

AmazonParser = (function(_super) {
  __extends(AmazonParser, _super);

  function AmazonParser() {
    return AmazonParser.__super__.constructor.apply(this, arguments);
  }

  AmazonParser.prototype.title = function(selector) {
    return selector('#productTitle').text();
  };

  AmazonParser.prototype.priceToInt = function(text) {
    return parseInt(text.slice(1).replace(',', ''));
  };

  AmazonParser.prototype.price = function(selector) {
    return this.priceToInt(selector('#priceblock_ourprice').text());
  };

  AmazonParser.prototype.fullPrice = function(selector) {
    var p;
    p = this.priceToInt(selector('#priceblock_ourprice').parent().parent().parent().children().first().children().last().text());
    if (p !== p) {
      return 0;
    } else {
      return p;
    }
  };

  AmazonParser.prototype.review = function(selector) {
    var classes;
    classes = selector('#acrPopover').children().children().children('.a-icon-star').attr('class');
    switch (false) {
      case !/a-star-5/.test(classes):
        return review.fiveStar;
      case !/a-star-4-5/.test(classes):
        return review.fourHalfStar;
      case !/a-star-4/.test(classes):
        return review.fourStar;
      case !/a-star-3-5/.test(classes):
        return review.threeHalfStar;
      case !/a-star-3/.test(classes):
        return review.threeStar;
      case !/a-star-2-5/.test(classes):
        return review.twoHalfStar;
      case !/a-star-2/.test(classes):
        return review.twoStar;
      case !/a-star-1-5/.test(classes):
        return review.oneHalfStar;
      case !/a-star-1/.test(classes):
        return review.oneStar;
      case !/a-star-0-5/.test(classes):
        return review.halfStar;
      case !/a-star-0/.test(classes):
        return review.zeroStar;
      default:
        return review.unknownStar;
    }
  };

  AmazonParser.prototype.benefits = function() {
    return ['bar'];
  };

  return AmazonParser;

})(Parser);

AmazonCNParser = (function(_super) {
  __extends(AmazonCNParser, _super);

  function AmazonCNParser() {
    return AmazonCNParser.__super__.constructor.apply(this, arguments);
  }

  AmazonCNParser.prototype.instore = function(selector) {
    var classes;
    classes = selector('#ddmAvailabilityMessage').children().attr('class');
    return /a-color-success/.test(classes);
  };

  return AmazonCNParser;

})(AmazonParser);

AmazonUSParser = (function(_super) {
  __extends(AmazonUSParser, _super);

  function AmazonUSParser() {
    return AmazonUSParser.__super__.constructor.apply(this, arguments);
  }

  AmazonUSParser.prototype.instore = function(selector) {
    var classes;
    classes = selector('#availability').children().attr('class');
    return /a-color-success/.test(classes);
  };

  return AmazonUSParser;

})(AmazonParser);

AmazonJPParser = (function(_super) {
  __extends(AmazonJPParser, _super);

  function AmazonJPParser() {
    return AmazonJPParser.__super__.constructor.apply(this, arguments);
  }

  return AmazonJPParser;

})(AmazonParser);

JingdongParser = (function(_super) {
  __extends(JingdongParser, _super);

  function JingdongParser() {
    return JingdongParser.__super__.constructor.apply(this, arguments);
  }

  JingdongParser.prototype.title = function(selector) {
    return selector('title').text().split(' - ')[0];
  };

  JingdongParser.prototype.priceToInt = function(text) {
    return parseInt(text.slice(1));
  };

  JingdongParser.prototype.price = function(selector) {
    return this.priceToInt(selector('.p-price > font:nth-child(1)').text());
  };

  JingdongParser.prototype.fullPrice = function(selector) {
    return 0;
  };

  JingdongParser.prototype.review = function(selector) {
    return review.zeroStar;
  };

  JingdongParser.prototype.instore = function(selector) {
    var instoreText;
    instoreText = selector('.p-stock > span:nth-child(1)').text();
    if (/有货/.test(instoreText)) {
      return true;
    } else {
      return false;
    }
  };

  JingdongParser.prototype.benefits = function() {
    return ['placeholder'];
  };

  return JingdongParser;

})(Parser);

parseErrorHandler = function(parserName) {
  logger.error('%s parse failed', parserName);
  throw new Error('parse error');
};

invalidSiteHandler = function(site) {
  logger.error('no available parser for site %s', site);
  throw new Error('invalid data error, no available parser for invalid site');
};

exports.MANDATORY_OUTPUT_FIELDS = MANDATORY_OUTPUT_FIELDS;

exports.createParser = function(site) {
  var parser;
  parser = (function() {
    switch (site) {
      case 'www.amazon.cn':
        return new AmazonCNParser();
      case 'www.amazon.com':
        return new AmazonUSParser();
      case 'www.amazon.co.jp':
        return new AmazonJPParser();
      case 'www.jd.com':
        return new JingdongParser();
      default:
        return invalidSiteHandler(site);
    }
  })();
  return parser;
};

module.exports = exports;
