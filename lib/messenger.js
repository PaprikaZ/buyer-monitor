// Generated by CoffeeScript 1.8.0
var MANDATORY_PARSE_FIELDS, SEED_BASE_FIELDS, assembleMessageBody, assembleMessageTitle, config, exports, fieldMissingHandler, push, request, requestErrorHandler, responseErrorHandler, shortenToken, util;

util = require('util');

request = require('request');

config = require('./config.js');

MANDATORY_PARSE_FIELDS = require('./page_parser.js').MANDATORY_OUTPUT_FIELDS;

SEED_BASE_FIELDS = require('./seed.js').MANDATORY_BASE_FIELDS;

assembleMessageTitle = function(result) {
  var title;
  title = '';
  if (SEED_BASE_FIELDS.every(function(field) {
    return result[field];
  })) {
    SEED_BASE_FIELDS.map(function(field) {
      title += util.format(', %s %s', field, result[field]);
    });
    title += ' meet your requirements';
  } else {
    fieldMissingHandler(SEED_BASE_FIELDS.join(' or '));
  }
  return title.slice(2);
};

assembleMessageBody = function(result) {
  var body;
  body = '';
  if (MANDATORY_PARSE_FIELDS.every(function(field) {
    return result[field];
  })) {
    MANDATORY_PARSE_FIELDS.map(function(field) {
      if (Array.isArray(result[field])) {
        body += util.format('%s:\n', field);
        result[field].map(function(item) {
          body += util.format('  %s', item);
        });
      } else {
        body += util.format('%s: %s\n', field, result[field]);
      }
    });
  } else {
    fieldMissingHandler(MANDATORY_PARSE_FIELDS.join(' or '));
  }
  return body;
};

shortenToken = function(token) {
  return token.slice(0, 7);
};

push = function(result, token) {
  var debugMsg, messenge, postOptions, shortToken;
  debugMsg = '';
  SEED_BASE_FIELDS.map(function(field) {
    debugMsg += util.format('%s %s', field, result[field]);
  });
  debugMsg += 'ready to be pushed';
  logger.debug(debugMsg);
  shortToken = shortenToken(token);
  messenge = {
    type: 'note',
    title: assembleMessageTitle(result),
    body: assembleMessageBody(result)
  };
  postOptions = {
    url: config.pushServiceUrl,
    auth: {
      user: token
    },
    headers: {
      'content-type': 'application/json'
    },
    body: JSON.stringify(messenge)
  };
  request.post(postOptions, function(err, res, body) {
    if (!err) {
      if (res.statusCode === 200) {
        logger.info('push message to user %s ok.', shortToken);
      } else {
        responseErrorHandler(shortToken, res, body);
      }
    } else {
      requestErrorHandler(shortToken, err);
    }
  });
};

fieldMissingHandler = function(fields) {
  logger.error('%s is missing', fields);
  throw new Error('data error, missing necessary fields');
};

responseErrorHandler = function(token, res, body) {
  logger.error('http post response error.');
  logger.error('%s url: %s', token, res.url);
  logger.error('%s status code: %s', token, res.statusCode);
  logger.error('%s body: %s', token, body);
  throw new Error('push message response error');
};

requestErrorHandler = function(token, err) {
  logger.error('http post request error.');
  logger.error('%s, error %s', token, err.message);
  throw err;
};

module.exports = exports = push;
