// Generated by CoffeeScript 1.8.0
var config, request, shortenToken, validTokens, verificationDone;

request = require('request');

config = require('./config.js');

verificationDone = false;

validTokens = [];

shortenToken = function(token) {
  return token.slice(0, 7);
};

exports.verify = function(tokens) {
  var makeVerifyDone, problemTokens, verifyDone;
  logger.info('user access tokens verifying ...');
  problemTokens = [];
  makeVerifyDone = function() {
    var counter;
    counter = tokens.length;
    return function() {
      counter -= 1;
      if (counter === 0) {
        logger.info('all access tokens verification done.');
        validTokens = tokens.filter(function(token) {
          return problemTokens.indexOf(token) === -1;
        });
        if (validTokens.length !== 0) {
          verificationDone = true;
        } else {
          throw new Error('config error, all token invalid');
        }
      }
    };
  };
  verifyDone = makeVerifyDone();
  tokens.map(function(token) {
    var options, shortToken;
    shortToken = shortenToken(token);
    options = {
      url: config.userServiceUrl,
      auth: {
        user: token
      }
    };
    request.get(options, function(err, res, body) {
      if (!err) {
        if (res.statusCode === 200) {
          logger.debug('token %s verify ok', shortToken);
        } else {
          logger.warn('token %s is invalid', shortToken);
          logger.warn('%s url: %s', shortToken, res.url);
          logger.warn('%s status code: %s', shortToken, res.statusCode);
          logger.warn('%s message: %s', shortToken, body);
          problemTokens.push(token);
          logger.info('%s removed from subscribers', shortToken);
        }
      } else {
        logger.error('token %s verify caught request error.', shortToken);
        logger.error('%s error: %s', shortToken, err.message);
        problemTokens.push(token);
        logger.info('%s removed from subscribers', shortToken);
      }
      verifyDone();
    });
  });
};

exports.isVerificationDone = function() {
  return verificationDone;
};

exports.getValidTokens = function() {
  return validTokens;
};

module.exports = exports;
